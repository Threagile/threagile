# Used for local manual test builds

######
## Stage 1: Build application with Go's build tools
######
FROM docker.io/library/golang:alpine as builder

RUN apk add --no-cache build-base

WORKDIR /app

COPY go.mod go.sum ./
RUN go mod download

COPY . .

ARG GOOS=linux

RUN : \
    && go version \
    && go test ./...

RUN : \
    && go build -a -trimpath -ldflags="-s -w -X main.buildTimestamp=$(date '+%Y%m%d%H%M%S')" -buildmode=plugin -o raa.so raa/raa/raa.go \
    && go build -a -trimpath -ldflags="-s -w -X main.buildTimestamp=$(date '+%Y%m%d%H%M%S')" -buildmode=plugin -o dummy.so raa/dummy/dummy.go \
    && go build -a -trimpath -ldflags="-s -w -X main.buildTimestamp=$(date '+%Y%m%d%H%M%S')" -buildmode=plugin -o demo-rule.so risks/custom/demo/demo-rule.go \
    && go build -a -trimpath -ldflags="-s -w -X main.buildTimestamp=$(date '+%Y%m%d%H%M%S')" -o threagile

# NOTE: copy files with final name to send to final image
RUN : \
    && cp /app/demo/example/threagile.yaml /app/demo/example/threagile-example-model.yaml \
    && cp /app/demo/stub/threagile.yaml /app/demo/stub/threagile-stub-model.yaml


######
## Stage 2: Make final small image
######

FROM docker.io/library/alpine:latest
LABEL type="threagile"

RUN apk add --no-cache \
    ca-certificates \
    graphviz \
    ttf-freefont

WORKDIR /app

COPY --from=builder \
    /app/*.so \
    /app/demo/example/threagile-example-model.yaml \
    /app/demo/stub/threagile-stub-model.yaml \
    /app/LICENSE.txt \
    /app/report/template/background.pdf \
    /app/support/ \
    /app/threagile \
    /app/

COPY --from=builder \
    /app/server \
    /app/server

RUN : \
    && mkdir /data \
    && chown -R 1000:1000 /app /data

USER 1000:1000

ENV PATH=/app:"{$PATH}" \
    GIN_MODE=release

ENTRYPOINT ["/app/threagile"]
CMD ["-help"]